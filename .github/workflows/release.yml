# .github/workflows/release.yml
name: Build and Release Stable

on:
  push:
    branches:
      - main            # релизим только из main

# токену Actions нужны права писать contents (теги, релизы, файлы)
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux   # x86_64
            goarch: amd64
          - goos: linux   # arm64
            goarch: arm64
          - goos: linux   # x86 (32-bit)
            goarch: 386
          - goos: linux   # armv7
            goarch: arm
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: freebsd
            goarch: amd64
          - goos: openbsd
            goarch: amd64
          - goos: netbsd
            goarch: amd64

    steps:
      - name: Check commit message for 'stable release'
        run: |
          echo "${{ github.event.head_commit.message }}" | grep -iq 'stable release' || exit 1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      # создаём минимальный go.mod, если его нет (убери шаг, когда добавишь свой)
      - name: Init go.mod if absent
        run: |
          if [ ! -f go.mod ]; then
            go mod init backup-redis
          fi

      - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS:   ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ github.sha }}
        run: |
          mkdir -p dist
          go build -o "dist/backup-redis_${GOOS}_${GOARCH}" \
                   -ldflags "-s -w -X main.version=$VERSION"

      # уникальное имя артефакта → нет 409 Conflict
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "bin-${{ matrix.goos }}-${{ matrix.goarch }}"
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-raw/

      - name: Publish GitHub Release (tag: latest)
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest                # релиз всегда называется latest
          name: Latest Stable Release
          files: 'dist-raw/**/*'

