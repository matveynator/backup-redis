name: Build and Release Stable

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Check commit message for 'stable release'
        run: |
          MSG="${{ github.event.head_commit.message }}"
          echo "Commit message: $MSG"
          echo "$MSG" | grep -i 'stable release' || {
            echo "❌ Commit does not contain 'stable release'. Skipping release."
            exit 1
          }

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Get short Git commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build for Redis platforms
        strategy:
          matrix:
            goos: [linux, darwin, freebsd, openbsd, netbsd, windows]
            goarch: [amd64, 386, arm, arm64]
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ steps.vars.outputs.sha_short }}
        run: |
          mkdir -p dist
          EXT=""
          if [ "$GOOS" = "windows" ]; then EXT=".exe"; fi
          OUT="backup-redis_${GOOS}_${GOARCH}${EXT}"
          go build -o "dist/$OUT" -ldflags "-s -w -X main.version=$VERSION"
          file dist/$OUT || true

      - name: Create GitHub Release (latest)
        uses: softprops/action-gh-release@v2
        with:
          name: "Latest Stable Release"
          tag_name: "latest"
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

