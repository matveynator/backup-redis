# .github/workflows/release.yml
name: Build and Release Stable

on:
  push:
    branches: [main]         # релизим только из main-ветки

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos:   [linux, darwin, freebsd, openbsd, netbsd, windows]
        goarch: [amd64, 386, arm, arm64]

    steps:
      # запуск только если в сообщении коммита есть "stable release" (без учёта регистра)
      - name: Check commit message
        run: |
          MSG="${{ github.event.head_commit.message }}"
          echo "Commit message: $MSG"
          echo "$MSG" | grep -iq 'stable release' || {
            echo "❌ Commit does not contain 'stable release' ⇒ stopping workflow"
            exit 1
          }

      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Save short commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS:   ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ steps.vars.outputs.sha_short }}
        run: |
          mkdir -p dist
          EXT=""
          [ "$GOOS" = "windows" ] && EXT=".exe"
          OUT="backup-redis_${GOOS}_${GOARCH}${EXT}"
          go build -o "dist/$OUT" -ldflags "-s -w -X main.version=$VERSION"

      - uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist/

      - name: "Publish GitHub Release"
        uses: softprops/action-gh-release@v2
        with:
          name:  "Latest Stable Release"
          tag_name: latest
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

