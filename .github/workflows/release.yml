# .github/workflows/release.yml
name: Build and Release Stable

on:
  push:
    branches:
      - main

# —Ç–æ–∫–µ–Ω—É –≤–æ—Ä–∫—Ñ–ª–æ—É –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ ¬´contents: write¬ª, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–ª–∏–∑
permissions:
  contents: write

jobs:
  build:
    # job –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ commit-message —Å–æ–¥–µ—Ä–∂–∏—Ç 'stable release'
    if: contains(toJson(github.event.head_commit.message), 'stable release')
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - { goos: linux,  goarch: amd64 }
          - { goos: linux,  goarch: arm64 }
          - { goos: linux,  goarch: 386 }
          - { goos: linux,  goarch: arm }
          - { goos: darwin, goarch: amd64 }
          - { goos: darwin, goarch: arm64 }
          - { goos: freebsd, goarch: amd64 }
          - { goos: openbsd, goarch: amd64 }
          - { goos: netbsd, goarch: amd64 }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # –µ—Å–ª–∏ go.mod –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞—ë–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π (–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ)
      - name: Init go.mod if absent
        run: |
          test -f go.mod || go mod init backup-redis

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS:   ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0            # üëà –æ—Ç–∫–ª—é—á–∞–µ–º CGO ‚Üí —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –±–∏–Ω–∞—Ä–Ω–∏–∫
          VERSION: ${{ github.sha }}
        run: |
          mkdir -p dist
          go build -o "dist/backup-redis_${GOOS}_${GOARCH}" \
                   -ldflags "-s -w -X main.version=$VERSION"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-raw/

      - name: Publish GitHub Release (tag latest)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: "Latest Stable Release"
          files: dist-raw/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
