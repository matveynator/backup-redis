# .github/workflows/release.yml
#
# Build `backup-redis` for all POSIX-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
# —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—Ä–∞–∑—É ‚Äústable release‚Äù (–±–µ–∑ —É—á—ë—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞),
# –∏ –ø—É–±–ª–∏–∫—É–µ—Ç –±–∏–Ω–∞—Ä–Ω–∏–∫–∏ –≤ GitHub Release —Å —Ç–µ–≥–æ–º latest.

name: Build & Release Stable

on:
  push:
    branches: [main]

# üîë GitHub-—Ç–æ–∫–µ–Ω—É –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ ¬´contents: write¬ª, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ä–µ–ª–∏–∑
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - { goos: linux,  goarch: amd64 }
          - { goos: linux,  goarch: arm64 }
          - { goos: linux,  goarch: 386 }
          - { goos: linux,  goarch: arm }
          - { goos: darwin, goarch: amd64 }
          - { goos: darwin, goarch: arm64 }
          - { goos: freebsd, goarch: amd64 }
          - { goos: openbsd, goarch: amd64 }
          - { goos: netbsd, goarch: amd64 }

    steps:
      # üõë –ü—Ä–µ—Ä—ã–≤–∞–µ–º workflow, –µ—Å–ª–∏ –∫–æ–º–º–∏—Ç –Ω–µ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ stable release
      - name: Abort unless commit message contains ‚Äústable release‚Äù
        run: |
          echo "${{ github.event.head_commit.message }}" | grep -iq 'stable release' || exit 1

      - uses: actions/checkout@v4

      # –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞ –µ—â—ë –Ω–µ—Ç –≤ go –º–æ–¥—É–ª—è—Ö ‚Äî —Å–æ–∑–¥–∞—ë–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π go.mod,
      # —á—Ç–æ–±—ã Go 1.22 –Ω–µ —Ä—É–≥–∞–ª—Å—è. –£–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç —à–∞–≥, –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ —Å–≤–æ–π go.mod
      - name: Init go.mod if absent
        run: |
          test -f go.mod || go mod init backup-redis

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS:   ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ github.sha }}
        run: |
          mkdir -p dist
          go build -o "dist/backup-redis_${GOOS}_${GOARCH}" \
                   -ldflags "-s -w -X main.version=$VERSION"

      # —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ ‚áí –Ω–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ 409
      - uses: actions/upload-artifact@v4
        with:
          name: "bin-${{ matrix.goos }}-${{ matrix.goarch }}"
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist-raw/

      - name: Publish GitHub Release (tag: latest)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: "Latest Stable Release"
          files: dist-raw/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

